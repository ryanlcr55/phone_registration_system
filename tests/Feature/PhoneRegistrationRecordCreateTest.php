<?php

namespace Tests\Feature;

use App\Entities\StoreCode;
use App\Entities\PhoneRegistrationRecord;
use App\Jobs\PhoneRegister;
use Carbon\Carbon;
use Illuminate\Support\Facades\Queue;
use Illuminate\Support\Str;
use Tests\TestCase;

class PhoneRegistrationRecordCreateTest extends TestCase
{
    protected $storeCode;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->storeCode = StoreCode::factory()->create()->refresh();
    }

    public function test_phone_registration_create_api()
    {
        Queue::fake();
        $response = $this->post('/api/phoneRegistrationRecord/', [
            'from' => '0912122212',
            'text' => '場所代碼：' . $this->storeCode->store_code . '\n本簡訊是簡訊實聯制發送，限防疫目的使用',
            'time' => Carbon::now()->format('Y-m-d\TH:i:s')
        ]);
        $response->assertSuccessful();
        Queue::assertPushed(PhoneRegister::class, 1);
    }

    public function test_phone_registration_create_by_job()
    {
        $phoneNum = Str::random(10);
        $dataTime = Carbon::now();

        $job = new PhoneRegister($phoneNum, $this->storeCode->store_code, $dataTime);
        $job->handle();

        $record = PhoneRegistrationRecord::query()
            ->where('phone_num', $phoneNum)
            ->where('store_code', $this->storeCode->store_code)
            ->where('registration_datetime', $dataTime)
            ->first();
        $this->assertNotEmpty($record);
    }
}
